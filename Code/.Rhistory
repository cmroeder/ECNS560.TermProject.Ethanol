library(tidyverse)
#import excel spreadsheet
production <- read_excel("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
#library needed pacakges
library(tidyverse)
library(stringr)
#import dirty corn prices
production = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/dirtycornproduction.rds")
#select only year values not forecasted values
production1 = production |>
filter(reference_period_desc == "YEAR")
#drop unneeded columns
production2 = production1 |>
select(state_alpha, year, Value)
#rename variables
production3 = production2 |>
rename(corn.production = Value, state_abb = state_alpha)
#convert production to numeric value
#check for observations which are not numbers
alpha = production3 |>
filter(str_detect(corn.production, "[:alpha:]"))
#remove commas
production4 = production3 |>
mutate(corn.production = str_replace_all(corn.production, ",", ""))
#coerce value and year variables to numeric
production5 = production4 |>
mutate(corn.production = as.numeric(corn.production))
#check that state and year combinations are unique
production5 |>
count(state_abb, year) |>
filter(n>1)
#drop OT (other) state_abb values
table(production5$state_abb)
production6 = production5 |>
filter(state_abb != "OT")
#check range of values
summary(production6$corn.production)
summary(production7$year)
production7 |>
filter(is.na(production)) |>
select(state_abb) |>
distinct()
View(production6)
#drop 2022 and 2023 values
production7 = production6 |>
filter(year != 2022, year != 2023)
production7 |>
filter(is.na(production)) |>
select(state_abb) |>
distinct()
filter(is.na(corn.production) |>
distinct()
production7 |>
filter(is.na(corn.production)) |>
select(state_abb) |>
distinct()
View(alpha)
library(readxl)
production <- read_excel("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
#the msn code ENPRP represents ethanol production - filter for that
production1 = production |>
filter(MSN =="ENPRP")
#drop unneeded columns
production2 = production1 |>
select(-Data_Status, -MSN)
#pivot data longer
production3 = production2 |>
pivot_longer(cols = -StateCode, names_to = "year", values_to = "eth.production")
#check that there is one observation for each state and year combination
production3 |>
count(StateCode, year) |>
filter(n>1)
#change name of state variable
production4 = production3 |>
rename(state_abb = StateCode)
#coerce year to an integer
production5 = production4 |>
mutate(year = as.integer(year))
#check summary of values
summary(production5$year)
table(production5$state_abb)
summary(production5$eth.production)
#save data in r format
saveRDS(production5, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
#save merged data
saveRDS(mega, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/Merging/corn.eth.merged.rds")
cornprices = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
cornproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/cleancornproduction.rds")
ethanolproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
mega = ethanolproduction |>
full_join(y = cornproduction, by = c("year", "state_abb"))
mega = mega |> full_join(y = cornprices, by = c("year", "state_abb"))
#check that there aren't duplicate state and year combinations
mega |>
count(state_abb,year) |>
filter(n>1)
#save merged data
saveRDS(mega, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/Merging/corn.eth.merged.rds")
