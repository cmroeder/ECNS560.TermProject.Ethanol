labs(title = "Montana Pastureland Values 1997-2023",
x = "Year",
y = "$/Acre")
MT_Pastureland_Values
lambsales4 |>
mutate(total_lbs_sold = head_sold*avg_weight_lbs) |>
select(breed, total_lbs_sold, price_cwt) |>
group_by(breed) |>
summarize(
mean_price_cwt = round(mean(price_cwt)),
total_lbs_sold = round(sum(total_lbs_sold))
)
library(readxl)
Prod_dataset <- read_excel("GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
View(Prod_dataset)
production <- read_excel("GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
#drop unneeded columns
production1 = production |>
select(-Data_Status, -MSN)
#library needed packages
library(dyplr)
library(tidyverse)
#drop unneeded columns
production1 = production |>
select(-Data_Status, -MSN)
#pivot data longer
production2 = production1 |>
pivot_longer(cols = StateCode, names_to = "year", values_to = "production")
View(production2)
#pivot data longer
production2 = production1 |>
pivot_longer(cols = -StateCode, names_to = "year", values_to = "production")
View(production2)
production2 |>
filter(production >0)
production2 |>
count(StateCode, year)
production2 |>
count(StateCode)
production3 = production1 |>
distinct(StateCode)
View(production3)
View(Prod_dataset)
production1 |>
table(Data_Status)
table(production1$Data_Status)
table(production$Data_Status)
production |>
countY(StateCode)
production |>
count(StateCode)
duplicate = production |>
filter(StateCode =="AK")
View(duplicate)
#the msn code ENPRP represents ethanol production - fitler for that
production1 = production |>
fitler(MSN =="ENPRP")
#the msn code ENPRP represents ethanol production - fitler for that
production1 = production |>
filter(MSN =="ENPRP")
#drop unneeded columns
production2 = production1 |>
select(-Data_Status, -MSN)
#pivot data longer
production3 = production2 |>
pivot_longer(cols = -StateCode, names_to = "year", values_to = "production")
#check that there is one observation for each state and year combination
production3 |>
count(StateCode, year)
#check that there is one observation for each state and year combination
production3 |>
count(StateCode, year) |>
filter(n>1)
#change name of state variable
production4 |>
mutate(rename(state_abb = StateCode))
#change name of state variable
production4 = production3 |>
mutate(rename(state_abb = StateCode))
#change name of state variable
production4 = production3 |>
rename(state_abb = StateCode)
View(production4)
#save data in r format
saveRDS(production4, "clean.ethanolproduction")
setwd("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction")
#save data in r format
saveRDS(production4, "clean.ethanolproduction")
setwd("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol")
#save data in r format
saveRDS(production4, "\Code\clean.ethanolproduction")
#save data in r format
saveRDS(production4, "/Code/clean.ethanolproduction")
#save data in r format
saveRDS(production4, "/Code/clean.ethanolproduction")
#import excel spreadsheet
production <- read_excel("/Data/EthanolProduction/Prod_dataset.xlsx")
setwd("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol")
#import excel spreadsheet
production <- read_excel("/Data/EthanolProduction/Prod_dataset.xlsx")
#save data in r format
saveRDS(production4, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Code/clean.ethanolproduction")
#save data in r format
saveRDS(production4, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Code/clean.ethanolproduction.rds")
#save data in r format
saveRDS(production4, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/clean.ethanolproduction.rds")
#save data in r format
saveRDS(production4, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
#library needed pacakges
library(tidyverse)
#import dirty corn prices
readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/dirtycornprices.rds")
#import dirty corn prices
prices = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/dirtycornprices.rds")
View(prices)
#drop unneeded columns
prices1 = prices |>
select(state_alpha, year, Value)
prices2 = prices1 |>
rename(value = Value, state_abb = state_alpha)
View(prices2)
prices3 = prices2 |>
mutate(as.numeric(value))
#convert prices to numeric value
#replace commas
masterhay3 = masterhay2 %>%
mutate(prices = str_replace_all(prices, ",", "")
)
#convert prices to numeric value
#replace commas
prices3 = prices2 %>%
mutate(prices = str_replace_all(prices, ",", "")
)
#convert prices to numeric value
#replace commas
prices3 = prices2 %>%
mutate(prices = str_replace_all(prices, ",", ""))
#convert prices to numeric value
#check for observations which are not numbers
prices2 |>
filter(str_detect(prices, "[:alpha:]")) |>
count(prices)
#rename variables
prices2 = prices1 |>
rename(prices = Value, state_abb = state_alpha)
#convert prices to numeric value
#check for observations which are not numbers
prices2 |>
filter(str_detect(prices, "[:alpha:]")) |>
count(prices)
#convert prices to numeric value
#check for observations which are not numbers
alpha = prices2 |>
filter(str_detect(prices, "[:alpha:]")) |>
count(prices)
View(alpha)
#replace "(NA)" values with "NA"
prices3 = prices2 |>
str_replace(prices, "\\(NA\\)", NA_character_)
#replace "(NA)" values with "NA"
prices3 = prices2 |>
str_replace(prices, \\(NA\\), NA_character_)
#replace "(NA)" values with "NA"
prices3 = prices2 |>
str_replace(prices, "\\(NA\\)", "NA_character_")
#replace "(NA)" values with "NA"
prices3 = prices2 |>
mutate(prices = str_replace(prices, "\\(NA\\)", NA_character_))
View(prices3)
#convert prices to numeric value
#check for observations which are not numbers
alpha = prices3 |>
filter(str_detect(prices, "[:alpha:]")) |>
count(prices)
#coerce value and year variables to numeric
prices4 = prices3 |>
mutate(prices = as.numeric(prices))
#check that state and year combinations are unique
unique = prices4 |>
count(state_abb, year)
#check that state and year combinations are unique
prices4 |>
count(state_abb, year)
#check that state and year combinations are unique
prices4 |>
count(state_abb, year) |>
filter(n>1)
#check range of values
summary(prices)
#check range of values
summary(prices4$prices)
#save
saveRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
#save
saveRDS(prices4,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
#import dirty corn prices
production = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/dirtycornproduction.rds")
#import dirty corn prices
production = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/dirtycornproduction.rds")
View(production)
#drop unneeded columns
production1 = production |>
select(state_alpha, year, Value)
#rename variables
production2 = production1 |>
rename(prices = Value, state_abb = state_alpha)
#convert prices to numeric value
#check for observations which are not numbers
alpha = production2 |>
filter(str_detect(prices, "[:alpha:]"))
View(alpha)
#convert prices to numeric value
#check for observations which are not numbers
alpha = production2 |>
filter(str_detect(prices, "[:alpha:]"))
#remove commas
production3 = production2 %>%
mutate(production = str_replace_all(production, ",", ""))
#remove commas
production3 = production2 |>
mutate(production = str_replace_all(production, ",", ""))
library(stringr)
#remove commas
production3 = production2 |>
mutate(production = str_replace_all(production, ",", ""))
#remove commas
production3 = production2 |>
mutate(production = map_chr(production, ~ str_replace_all(., ",", "")))
View(production2)
#rename variables
production2 = production1 |>
rename(production = Value, state_abb = state_alpha)
#convert production to numeric value
#check for observations which are not numbers
alpha = production2 |>
filter(str_detect(production, "[:alpha:]"))
#remove commas
production3 = production2 |>
mutate(production = str_replace_all(production, ",", ""))
#coerce value and year variables to numeric
production4 = production3 |>
mutate(production = as.numeric(production))
#check that state and year combinations are unique
production4 |>
count(state_abb, year) |>
filter(n>1)
View(production)
#select only year values not forecasted values
production1 = production |>
filter(reference_period_desc == "YEAR")
#drop unneeded columns
production2 = production1 |>
select(state_alpha, year, Value)
#rename variables
production3 = production2 |>
rename(production = Value, state_abb = state_alpha)
#convert production to numeric value
#check for observations which are not numbers
alpha = production3 |>
filter(str_detect(production, "[:alpha:]"))
#remove commas
production4 = production3 |>
mutate(production = str_replace_all(production, ",", ""))
#coerce value and year variables to numeric
production5 = production4 |>
mutate(production = as.numeric(production))
#check that state and year combinations are unique
production5 |>
count(state_abb, year) |>
filter(n>1)
#check range of values
summary(production5$production)
View(production5)
table(production5$production)
table(production5$state_abb)
#drop OT (other) state_abb values
production6 = production5 |>
filter(state_abb != "OT")
#check range of values
summary(production6$production)
#save
saveRDS(production6,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/cleancornproduction.rds")
#drop OT (other) state_abb values
table(production5$state_abb)
#drop OT (other) state_abb values
table(prices4$state_abb)
#library needed packages
library(tidyverse)
#load in datasets
cornprices = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
cornproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/cleancornproduction.rds")
#check summary of values
table(production4$year)
#check summary of values
summary(production4$year)
table(production4$state_abb)
production <- read_excel("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
#the msn code ENPRP represents ethanol production - filter for that
production1 = production |>
filter(MSN =="ENPRP")
#drop unneeded columns
production2 = production1 |>
select(-Data_Status, -MSN)
#pivot data longer
production3 = production2 |>
pivot_longer(cols = -StateCode, names_to = "year", values_to = "production")
#check that there is one observation for each state and year combination
production3 |>
count(StateCode, year) |>
filter(n>1)
#change name of state variable
production4 = production3 |>
rename(state_abb = StateCode)
#check summary of values
summary(production4$year)
#coerce year to an integer
production5 = production4 |>
mutate(year = as.integer(year))
#check summary of values
summary(production5$year)
table(production5$state_abb)
summary(prices4$year)
#drop 2022 values
prices5 = prices4 |>
filter(year != 2022)
#save
saveRDS(prices5,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
summary(production6$year)
#drop 2022 and 2023 values
production7 = production6 |>
filter(year != 2022 & 2023)
summary(production7$year)
#drop 2022 and 2023 values
production7 = production6 |>
filter(year != 2022 | 2023)
summary(production7$year)
summary(prices5$year)
#drop 2022 and 2023 values
production7 = production6 |>
filter(year != 2022, year != 2023)
summary(production7$year)
#save
saveRDS(production7,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/cleancornproduction.rds")
#save
saveRDS(prices5,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
summary(production5$production)
#import excel spreadsheet
production <- read_excel("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
#the msn code ENPRP represents ethanol production - filter for that
production1 = production |>
filter(MSN =="ENPRP")
#drop unneeded columns
production2 = production1 |>
select(-Data_Status, -MSN)
#pivot data longer
production3 = production2 |>
pivot_longer(cols = -StateCode, names_to = "year", values_to = "eth.production")
#check that there is one observation for each state and year combination
production3 |>
count(StateCode, year) |>
filter(n>1)
#change name of state variable
production4 = production3 |>
rename(state_abb = StateCode)
#coerce year to an integer
production5 = production4 |>
mutate(year = as.integer(year))
summary(production5$eth.production)
#save data in r format
saveRDS(production4, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
prices = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/dirtycornprices.rds")
#drop unneeded columns
prices1 = prices |>
select(state_alpha, year, Value)
#rename variables
prices2 = prices1 |>
rename(corn.prices = Value, state_abb = state_alpha)
#convert prices to numeric value
#check for observations which are not numbers
alpha = prices2 |>
filter(str_detect(corn.prices, "[:alpha:]")) |>
count(corn.prices)
#replace "(NA)" values with "NA"
prices3 = prices2 |>
mutate(corn.prices = str_replace(corn.prices, "\\(NA\\)", NA_character_))
#coerce value and year variables to numeric
prices4 = prices3 |>
mutate(corn.prices = as.numeric(corn.prices))
#check that state and year combinations are unique
prices4 |>
count(state_abb, year) |>
filter(n>1)
#check for any miscellaneous categories in state column like OT (other)
table(prices4$state_abb)
#check range of values
summary(prices4$corn.prices)
summary(prices4$year)
#drop 2022 values
prices5 = prices4 |>
filter(year != 2022)
#save
saveRDS(prices5,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
production = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/dirtycornproduction.rds")
#select only year values not forecasted values
production1 = production |>
filter(reference_period_desc == "YEAR")
#drop unneeded columns
production2 = production1 |>
select(state_alpha, year, Value)
#rename variables
production3 = production2 |>
rename(corn.production = Value, state_abb = state_alpha)
#convert production to numeric value
#check for observations which are not numbers
alpha = production3 |>
filter(str_detect(corn.production, "[:alpha:]"))
#remove commas
production4 = production3 |>
mutate(corn.production = str_replace_all(corn.production, ",", ""))
#coerce value and year variables to numeric
production5 = production4 |>
mutate(corn.production = as.numeric(corn.production))
#check that state and year combinations are unique
production5 |>
count(state_abb, year) |>
filter(n>1)
#drop OT (other) state_abb values
table(production5$state_abb)
production6 = production5 |>
filter(state_abb != "OT")
#check range of values
summary(production6$corn.production)
summary(production7$year)
#drop 2022 and 2023 values
production7 = production6 |>
filter(year != 2022, year != 2023)
#save
saveRDS(production7,"C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/cleancornproduction.rds")
cornprices = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornPrices/cleancornprices.rds")
cornproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/cleancornproduction.rds")
ethanolproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
mega = ethanolproduction |>
left_join(y = cornproduction, by = c(year, state_abb))
mega = ethanolproduction |>
left_join(y = cornproduction, by = c("year", "state_abb"))
production <- read_excel("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/Prod_dataset.xlsx")
#the msn code ENPRP represents ethanol production - filter for that
production1 = production |>
filter(MSN =="ENPRP")
#drop unneeded columns
production2 = production1 |>
select(-Data_Status, -MSN)
#pivot data longer
production3 = production2 |>
pivot_longer(cols = -StateCode, names_to = "year", values_to = "eth.production")
#check that there is one observation for each state and year combination
production3 |>
count(StateCode, year) |>
filter(n>1)
#change name of state variable
production4 = production3 |>
rename(state_abb = StateCode)
#coerce year to an integer
production5 = production4 |>
mutate(year = as.integer(year))
#check summary of values
summary(production5$year)
table(production5$state_abb)
summary(production5$eth.production)
#save data in r format
saveRDS(production4, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
ethanolproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
#save data in r format
saveRDS(production5, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
ethanolproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
mega = ethanolproduction |>
left_join(y = cornproduction, by = c("year", "state_abb"))
View(mega)
mega = ethanolproduction |>
full_join(y = cornproduction, by = c("year", "state_abb"))
View(mega)
#drop D.C. observations
production6 = production5 |>
filter(state_abb != "DC")
table(production6$state_abb)
#save data in r format
saveRDS(production6, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
ethanolproduction = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/EthanolProduction/clean.ethanolproduction.rds")
mega = ethanolproduction |>
full_join(y = cornproduction, by = c("year", "state_abb"))
full_join(y = cornprices, by = c("year", "state_abb")
full_join(y = cornprices, by = c("year", "state_abb")
mega1 = mega |>
mega1 = mega |> full_join(y = cornprices, by = c("year", "state_abb")
mega |> full_join(y = cornprices, by = c("year", "state_abb")
mega1 = mega |> full_join(y = cornprices, by = c("year", "state_abb")
mega =  mega |> full_join(y = cornprices, by = c("year", "state_abb")
mega = mega |> full_join(y = cornprices, by = c("year", "state_abb"))
View(mega)
#check that there aren't duplicate state and year combinations
mega |>
count(state,year) |>
filter(n>1)
#check that there aren't duplicate state and year combinations
mega |>
count(state_abb,year) |>
filter(n>1)
#save merged data
saveRDS(mega, "C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/merged.rds")
#import dirty corn prices
production = readRDS("C:/Users/cmeta/OneDrive/Documents/GitHub/ECNS561.TermProject.Ethanol/Data/CornProduction/dirtycornproduction.rds")
View(production)
